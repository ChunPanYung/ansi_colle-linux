---
# Setup gpg and allows preset passphrase
- name: Create directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.gnupg"
    state: directory
    mode: '0700'

- name: Create gpg config file
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.gnupg/gpg-agent.conf"
    append_newline: true
    prepend_newline: true
    create: true
    backup: true
    mode: '0600'
    block: |
      # Setup default cache time and max cache time in seconds, 1 hour is 3600
      default-cache-ttl 3600
      default-cache-ttl-ssh 3600
      max-cache-ttl 28800
      max-cache-ttl-ssh 28800

- name: Setup GPG_TTY variable
  ansible.builtin.lineinfile:
    create: true
    backup: true
    mode: '0644'
    path: "{{ ansible_user_dir }}/.bashrc"
    regexp: '^export GPG_TTY='
    line: export GPG_TTY=$(tty)

- name: Enable gpg-agent daemon on startup
  ansible.builtin.lineinfile:
    create: true
    backup: true
    mode: '0644'
    path: "{{ ansible_user_dir }}/.bashrc"
    regexp: '^eval "\$\(gpg-agent'
    line: >
      eval "$(gpg-agent --daemon &> /dev/null)" #Eanble gpg-agent on startup

- name: Create gpg config file
  ansible.builtin.blockinfile:
    path: "{{ ansible_user_dir }}/.gnupg/gpg.conf"
    append_newline: true
    prepend_newline: true
    create: true
    backup: true
    mode: '0600'
    block: |
      # Short key format
      keyid-format short
      # Output ASCII instead of binary
      armor
      # Enable smartcard
      use-agent
      # Display all keys and their fingerprints
      with-fingerprint

- name: Setup gpg alias equivalent of 'ssh-add'
  ansible.builtin.lineinfile:
    create: true
    backup: true
    mode: '0644'
    path: "{{ ansible_user_dir }}/.bashrc"
    regexp: '^alias gpg-add='
    line: "alias gpg-add='echo | gpg -s > /dev/null'"

- name: Install pinentry, for enter gpg passphrase on CLI
  become: true
  ansible.builtin.package:
    name: pinentry-tty
