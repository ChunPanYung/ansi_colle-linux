---
# Setup gpg and allows preset passphrase
- name: Create directory
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.gnupg"
    state: directory
    mode: '0700'

- name: Create gpg config file
  ansible.builtin.copy:
    src: gpg-agent.conf
    dest: "{{ ansible_user_dir }}/.gnupg/gpg-agent.conf"
    mode: '0600'

- name: Setup GPG_TTY variable
  ansible.builtin.lineinfile:
    path: "{{ g_home_bashrc }}"
    regexp: '^export GPG_TTY='
    line: export GPG_TTY=$(tty)

- name: Enable gpg-agent daemon on startup
  ansible.builtin.lineinfile:
    path: "{{ g_home_profile }}"
    regexp: '^eval "\$\(gpg-agent'
    line: >
      eval "$(gpg-agent --daemon &> /dev/null)" #Eanble gpg-agent on startup

- name: Create gpg.conf if it does not exist
  ansible.builtin.file:
    path: "{{ ansible_user_dir }}/.gnupg/gpg.conf"
    mode: '0644'
    state: touch
    modification_time: preserve
    access_time: preserve

- name: Short key id format for gpg
  ansible.builtin.lineinfile:
    path: "{{ ansible_user_dir }}/.gnupg/gpg.conf"
    regexp: "{{ item.key }}"
    line: "{{ item.value }}"
  loop:
    - {key: '^# Long hexidecimal key format', value: '# Short key format'}
    - {key: '^keyid-format', value: 'keyid-format short'}

- name: Setup gpg alias equivalent of 'ssh-add'
  ansible.builtin.lineinfile:
    path: "{{ g_home_aliases }}"
    regexp: '^alias gpg-add='
    line: "alias gpg-add='echo | gpg -s > /dev/null'"

- name: Install pinentry
  become: true
  ansible.builtin.package:
    name: pinentry-tty
