# https://taskfile.dev

version: "3"

vars:
  GREETING: Hello, World!

tasks:
  changelog:*:
    desc: |
      Create or append to CHANGELOG.md, need tag version.
      TAG -> Create a git tag, ex: v1.0.1.
    vars:
      TAG: "{{index .MATCH 0}}"
    cmds:
      - "git-cliff --prepend CHANGELOG.md --unreleased --tag {{.TAG}}"

  playbook:*:
    desc: |
      Run this plabyook:
      INVENTORY -> inventory file path, default is localhost.
      TAGS -> Select only role with specific tag, you can view them from site.yml file.
    vars:
      INVENTORY: '{{.INVENTORY | default "127.0.0.1, --connection=local"}}'
      TAGS: '{{index .MATCH 0 | default "all"}}'
    cmds:
      - cmd: >-
          ansible-playbook ansi_colle.linux.site --ask-become-pass
          --inventory {{.INVENTORY}} --tags {{.TAGS}}
  install:
    desc: |
      Install this collection and requirement.
      BRANCH -> Specify git branch or tag, default is main.
    vars:
      BRANCH: '{{.BRANCH | default "main"}}'
    cmds:
      - "ansible-galaxy collection install --upgrade community.general"
      - "ansible-playbook ./playbooks/install.yml --extra-vars git_branch={{.BRANCH}}"

  local:build:
    desc: Locally install current working branch, then execute this branch
    cmds:
      - ansible-galaxy collection install --force {{.ROOT_DIR}}

  local:run:*:
    desc: Build and run working branch, then execute this branch with tags specified.
    vars:
      TAGS: '{{index .MATCH 0 | default "all"}}'
    cmds:
      - task: local:build
      - task: playbook:{{.TAGS}}

  build:docs:
    desc: Install current repo locally and create documentation using `antsibull-docs`.
    dir: "{{.ROOT_DIR}}"
    vars:
      DIST_DOCS: "{{.ROOT_DIR}}/dist/docs"
      COLLECTION_NAME: ansi_colle.linux
    cmds:
      - task: local:build
      - mkdir --parent {{.DIST_DOCS}}
      - antsibull-docs sphinx-init --use-current --squash-hierarchy --dest-dir {{.DIST_DOCS}} {{.COLLECTION_NAME}}
      - pip install --requirement {{.ROOT_DIR}}/dist/docs/requirements.txt
      - "{{.ROOT_DIR}}/dist/docs/build.sh"
      -  # Docs site should be located @ `build/html/index.html`

  watch:docs:
    desc: Watch changes on `argument_specs.yml` file and create docsite when changed.
    watch: true
    sources:
      - "**/argument_specs.yml"
    generates:
      - "{{.ROOT_DIR}}/dist/docs/build/html/index.html"
    cmds:
      - task: build:docs
